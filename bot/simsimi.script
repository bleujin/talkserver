new function() {
	// simsimi test key = 22441b90-e7a7-4a68-9f5b-6486b0a59676
	var serverHost = 'http://sandbox.api.simsimi.com/request.p?key=22441b90-e7a7-4a68-9f5b-6486b0a59676&lc=ko' ;
	
	
	this.onLoad = function(){
		session.tran(function(wsession){
			wsession.pathBy("/bots/simsimi") ;
			wsession.pathBy("/users/simsimi").property("userId", "simsimi").property("nickname", "SimSimI bot").property("stateMessage", "normal") ;
		}) ;
	},
	
	this.onMessage = function(bm){
		if ("simsimi" == bm.sender()) return ;
		
		var handler = new net.ion.talk.bot.connect.BotCompletionHandler() {
			onCompleted: function(jsonResponse) {
				session.tran(function(wsession) {
					var roomId = bm.roomId() ;
					var selfBotId = bm.botId() ;
					var resp = eval('(' + jsonResponse + ')');
					
					
		            var messageNode = wsession.pathBy("/rooms/" + roomId + "/messages/" + bm.newMsgId())
		                    .property("message", resp.response)
		                    .refTo("sender", "/users/"+selfBotId)
		                    .property("roomId", roomId)
		                    .property("options", "{event:'onMessage'}")
		                    .property("clientScript", bm.clientScript())
		                    .property("messageId", bm.messageId());					
				});
			} ,
			
			onThrowable: function(ex){
				ex.printStackTrace() ;
			}
		};

		bc.request(serverHost).addParameter("text", bm.message()).post(handler);
	},
	
	this.onWhisper = function(source, whisperMsg){
		var handler = new net.ion.talk.bot.connect.BotCompletionHandler() {
			onCompleted: function(jsonResponse) {
				var resp = eval('(' + jsonResponse + ')');
				
				java.lang.System.out.println(jsonResponse) ;
				source.sendMessage(
				rb.makeCommandBuilder("/whisper/simsimi")
				  .inner("result")
				  	.property("sender", "simsimi")
					.property("clientScript", "client.room().message(args);")
					.property("message", resp.result == 200 ? resp.response : resp.msg)
					.property("options", "{event:'onWhisper'}")
					.property("messageId", new net.ion.framework.util.ObjectId().toString()).build().talkMessage()) ;
			} ,
			
			onThrowable: function(ex){
				source.sendMessage(
				rb.makeCommandBuilder("/whisper/simsimi")
				  .inner("result")
				  	.property("sender", "simsimi")
					.property("clientScript", "client.room().message(args);")
					.property("message", ex.getMessage())
					.property("options", "{event:'onWhisper'}")
					.property("messageId", new net.ion.framework.util.ObjectId().toString()).build().talkMessage()) ;
			}
		};

		bc.request(serverHost).addParameter("text", whisperMsg.userMessage()).post(handler);
	}, 
	
	
	this.onEnter = function(bm){
		var roomId = bm.roomId() ;
		var selfBotId = bm.botId() ;

		if ("simsimi" == bm.sender()) return ;
		
		var memberList = session.pathBy("/rooms/" + roomId + "/members").childrenNames().toArray();
        session.tran(function(wsession) {
            var messageNode = wsession.pathBy("/rooms/" + roomId + "/messages/" + bm.newMsgId())
                    .property("message", "Hello I'm SimSimI")
                    .refTo("sender","/users/"+ selfBotId)
                    .property("roomId", roomId)
                    .property("options", "{event:'onMessage'}")
                    .property("clientScript", bm.clientScript())
                    .property("messageId", bm.messageId());
                    

        }) ;
		
	}, 
	
	this.onExit = function(params){
		// do nothing
	}, 
	
	this.onFilter = function(params){

	}	
}