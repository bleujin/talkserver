new function(){

    var _myBotId = 'huebot' ;
    var serverHost = 'http://192.168.11.77/api/newdeveloper/lights/1/state';

    this.onLoad = function(){

    },

        this.onMessage = function(bm){
			importPackage(net.ion.framework.parse.gson) ;
            // if((!bm.message().equalsIgnoreCase('') && !bm.message().equalsIgnoreCase('불켜')) || session.exists("/bots/"+ bm.fromUserId())) return ;

            if ( bm.message().startsWith('{') && bm.message().endsWith('}') ) {   // {'on':true, 'sat':80, 'bri':255,'hue':10000}

	            var roomId = bm.fromRoomId() ;
	            var selfBotId = bm.toUserId() ;
	            var time= new Date().getTime();
	            var messageId=new net.ion.framework.util.ObjectId().toString();
            
	            var messageBody = JsonObject.fromString(bm.message()) ;
	            var successMsg = 'Aye Aye sir !';

	            var handler = new net.ion.talk.bot.connect.BotCompletionHandler() {
	                onCompleted: function(jsonResponse) {
	                     var response = jsonResponse.getAsJsonArray().get(0).getAsJsonObject();
	
	                    session.tran(function(wsession) {
	                        var messageNode = wsession.pathBy("/rooms/" + roomId + "/messages/" + messageId)
	                            .property("message", response.has('success') ? successMsg : 'Sorry Sir')
	                            .refTo("sender", "/users/"+selfBotId)
	                            .property("roomId", roomId)
	                            .property("options", "{event:'onMessage'}")
	                            .property("clientScript", bm.clientScript())
	                            .property("time",time.toString())
	                            .property("messageId", messageId);
	
	                    }) ;
	                },
	
	                onThrowable: function(ex){
	                	java.lang.System.out.println(ex.getMessage()) ;
	                    ex.printStackTrace() ;
	                }
	            };
	            
				bc.putRequest(serverHost).setBody(messageBody.toString()).put(handler);
			}
        },


        this.onWhisper = function(source, whisperMsg){
            source.sendMessage(
                rb.makeCommandBuilder("/whisper/baseball")
                    .inner("result")
                    .property("sender", "baseball")
                    .property("clientScript", "client.room().message(args);")
                    .property("message", whisperMsg.message())
                    .property("options", "{event:'onWhisper'}")
                    .property("messageId", new net.ion.framework.util.ObjectId().toString()).build().talkMessage()) ;
        },


        this.onEnter = function(bm){
            // this.sendMessage("onEnter", bm, {message :"Hello " + bm.fromUserId() + " I'm EchoBot"}) ;
        },

        this.onExit = function(bm){

        },

        this.onFilter = function(bm){

        }
}
