new function(){

	this.onLoad = function(){
		session.tran(function(wsession){
			wsession.pathBy("/users/echo").property("userId", "echo").property("nickname", "echo bot").property("stateMessage", "normal").property("free", true) ;
		}) ;
	}, 
	
	this.sendMessage = function(oriSender, event, bm, args){
		var roomId = bm.roomId() ;
		var selfBotId = bm.botId() ;

		if (session.exists("/bots/" + oriSender)) return ;
        session.tran(function(wsession) {
            var messageNode = wsession.pathBy("/rooms/" + roomId + "/messages/" + bm.newMsgId())
                    .property("message", args.message || bm.message())
                    .refTo("sender", "/users/"+selfBotId)
                    .property("roomId", roomId)
                    .property("options", "{event:'onMessage'}")
                    .property("clientScript", bm.clientScript())
                    .property("messageId", bm.messageId());

        }) ;
	}, 
	
	this.onWhisper = function(source, whisperMsg){
		source.sendMessage(
			rb.makeCommandBuilder("/whisper/echo")
			  .inner("result")
			  	.property("sender", "echo")
				.property("clientScript", "client.room().message(args);")
				.property("message", whisperMsg.userMessage())
				.property("options", "{event:'onWhisper'}")
				.property("messageId", new net.ion.framework.util.ObjectId().toString()).build().talkMessage()) ;
	}, 
	
	this.onMessage = function(bm){
		this.sendMessage(bm.sender(), "onMessage", bm, {}) ;
	}, 
	
	this.onEnter = function(bm){
		this.sendMessage(bm.sender(), "onEnter", bm, {message :"Hello I'm EchoBot. please type: /help"}) ;
	}, 
	
	this.onExit = function(bm){
//		this.sendMessage(bm.sender(), "onExit", bm, {message :"Bye"}) ;
	}, 
	
	this.onFilter = function(bm){

	}
}