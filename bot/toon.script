new function(){

	var _myBotId = 'toon' ;
    var pixelPerLine = net.ion.talk.bot.LineCalculator.PIXEL_PER_LINE;
    var padding = net.ion.talk.bot.LineCalculator.BUBBLE_PADDING;
    var characterHeight = 90;

	this.onLoad = function(){
		session.tran(function(wsession) {
			wsession.pathBy("/bots/toon").property("owner", true) ;
			wsession.pathBy("/users/system").property("character", "penguin") ;
			
			wsession.pathBy("/toons/character/bat") ;
			wsession.pathBy("/toons/character/bulldog") ;
			wsession.pathBy("/toons/character/chicken") ;
			wsession.pathBy("/toons/character/chihuahua") ;
			wsession.pathBy("/toons/character/frog") ;
			wsession.pathBy("/toons/character/monkey") ;
			wsession.pathBy("/toons/character/penguin") ;
			wsession.pathBy("/toons/character/pig") ;
			wsession.pathBy("/toons/character/seal") ;
			wsession.pathBy("/toons/character/sheep") ;
			
			
			wsession.pathBy("/bots/toon").property("sender", "./resource/bot/toon/sender.tpl").property("receiver", "./resource/bot/toon/receiver.tpl") ;
		}) ;
	};


	this.onPost = function(paramMap, messageNode){
		importPackage(net.ion.emotion) ;
		
		var emotion = Empathyscope.feel(paramMap.get('message')).getStrongestEmotion() ;

        paramMap.put("emotion", emotion.etype().toString().toLowerCase()) ;
        paramMap.put("charId", messageNode.ref('sender').property('character').defaultValue("bat")) ;
	} ;

	this.onMessage = function(bm){
// 		if (! bm.isBlank('_owner')) return ;
		/*
		
		var cmd = bm.asCommand() ;
		var roomId = bm.fromRoomId() ;
		var time= new Date().getTime();
		var messageId=new net.ion.framework.util.ObjectId().toString();
		var senderCharId = session.ghostBy("/users/" + bm.fromUserId()).property("character").asString() ;

        var msgHeight = Math.max(net.ion.talk.bot.LineCalculator.linesOf(bm.message()) * pixelPerLine, 120) + (padding * 2);

        session.tran(function(wsession) {
        var messageNode = wsession.pathBy("/rooms/" + roomId + "/messages/" + messageId)
                .property("message", bm.message())
                .property("toon", "<embed type='image/svg+xml' pluginspage='http://www.adobe.com/svg/viewer/install/' width='250' height='"+msgHeight+"' src='/image/svg/" + bm.fromRoomId() + "/{type}/" + bm.messageId() + ".svg?charId=" + senderCharId + "'/>")
                .refTo("sender", "/users/"+bm.fromUserId())
                .property("roomId", roomId)
                .property("requestId", bm.asString('requestId'))
                .property("options", "{event:'onMessage'}")
                .property("clientScript", "client.room().toon(args)")
                .property("time",time.toString())
                .property("_owner", _myBotId) 
                .property("messageId", messageId);
		}) ;
		*/
	};
	
	
	this.onWhisper = function(source, whisperMsg){
		var charId = whisperMsg.message().trim() ;
		if (session.exists("/toons/character/" + charId)){
			session.tran(function(wsession){
				wsession.pathBy("/users/" + whisperMsg.fromUserId()).property("character", charId) ;
			}) ;
		}
		 
	};
	
	this.onEnter = function(bm){
	};
	
	this.onExit = function(bm){
	};
	
	this.whenIN = function(roomId){
		session.tran(function(wsession){
			wsession.pathBy("/rooms/" + roomId).refTos("postbot", "/bots/toon") ;
		}) ;
	} ;

	this.whenOUT = function(roomId){
		session.tran(function(wsession){
			wsession.pathBy("/rooms/" + roomId).unRefTos("postbot", "/bots/toon") ;
		}) ;
	} ;
	
	
}